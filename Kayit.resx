<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADkAAAAsCAYAAADfAxCtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        aAAAEmgBTAWAxQAABDlJREFUaEPd2S+UU0cUx3HOqVlThcStRq3G9xwOqraqdk3rkNhabDWuEldbh6xE
        VSJrMAjo75O3k72ZTJK3u0m2yT3nW5JhJu/+n/vokx9+fXX2DBfPjeHiuTFc3BeR5+GX8HN4OtpzDIaL
        DyXyfbgOH8O3G96M9h6D4eJDiLwI78OX0AzEu9H+YzBcvA+Rp+FN+BSqcUsjw3ejs4dmuHgXKB5ehr9C
        Nerf8Ll8P00jI5fhbWBQM+Zr+DP8GP6+WcMf4XSMjFyEn0I1Av8E3VTjkb6naWTEtSD1amPx2drzsu/0
        jIyIjiiJVlMcDBHVi27/mpH174/JcLEn4lpQZ+qtKa0O1ePlhjO9kT4bCjhEo/KbsuJZ4MCDRXm42LhR
        4LfQXws6KUU3KhbpjWxwlPTWef2uzPgQpLNnccJV2NuENF6M8kF39PCqIKXchTsViGhO6pRRNQN2Ya8s
        8WyZQo9no2fMZX1huhZ+D/WO82BTzIt+/zYioinioiNVjXrqmqMYIHqywvjHsJEzRF1G2C/FV2p/Drcf
        Js9TpM6bWF4L9eA+iMgY9agspChnSFmGjyYnjpAdjJ1dw9N/pgfwar0WRHLlWjgWEYZrSiKv4dVhoxkr
        24ZNr4e8DvVakDLSY+1aeAzoEESOUX10ZR09t0aV1NoDg+9Ue8cgIrVlnOyqOvssxTeWE+nfHERSZ9PV
        HmVC2UakjZS1d9BZpIddvx3kId2zdjcemp33xyaiZtVr0xf0XYtoPaTYFfqsse3/QERXFpymqyDJzJUM
        XDm0WJg81Of92gA+h4h7Utq7mtpI53sb62SQe/leo539N2fru6zO+3JlX/2yXLzN+34sm31nRurE46w/
        G22so5B+oL4o2kY7DuEEBuw0PMJZtUb1lOWUtHagEtn0Urxz+olsml3nwgkU9yzXHKO3dVCOqff86+Xf
        1Y0jIpv+eWPrHGs9VCN9lgWgdBvtRJshvC9TOLRFv2KdDs4qqdW6mzJHJrT9HLSI5opi23Ag9NcNPHjt
        jSTSG7nxfTLSxjuZI2JKRdrqnp7XG21NJ73qfoceLeucuV6s101ziFBi07vlbR0MjAx3bSyiI2pS0fne
        wb5zxhSxaX/ttj5fDH98FxEGSLvRdbMYIsKDjaw4Gxgsm2qTgVRfdNQIh7QAcMLV8AfnsviBSfl+sJdK
        Ir43IysRaS2CNbKyieM5ojmfXtfDH7kLESnCe713WxNp3zWYvRjZiHBkbYiMYnxdezc8fB8io5ftyt6N
        RERDrPcxQ6tzPwwP3peIulGTaqQ9pHGw/xcSUf8c3D8Tn4aHHkqEd6VN9ejb0d59EWFo7ayNz8MD+yAi
        qmrG1cLgg7/NRDTCvuN/GW4+ZSImorM3UgOs0Txcuj4WEWWi2zYjD9N4HptInXreDzedOhHDPkP9S8fl
        cNO5MVw8N4aL58WrJ/8B70354DYS7w8AAAAASUVORK5CYII=
</value>
  </data>
</root>